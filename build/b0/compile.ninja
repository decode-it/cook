#[output](script:
#$gubg_mods=%w[std io algo math chaiscript].map{|str|"extern/gubg.#{str}"}
#$gubg_fns=$gubg_mods.map{|mod|FileList.new("#{mod}/src/gubg/**/*.cpp").exclude("extern/gubg.io/src/gubg/file/Descriptor.cpp").to_a}.flatten
#$gubg_test_fns=$gubg_mods.map{|mod|FileList.new("#{mod}/test/src/gubg/**/*_tests.cpp").to_a}.flatten+%w[extern/gubg.chaiscript/test/src/gubg/chai/test/Engine.cpp]
#$cook_fns=FileList.new("lib/src/**/*.cpp").to_a
#$cook_test_fns=FileList.new("lib/test/**/*_tests.cpp").to_a
#$cook_app_fns=FileList.new("app/**/*.cpp").to_a
#$obj = ->(fn){fn.gsub("/","_")+".obj"}
#$obj = ->(fn){fn+".obj"}
#){
#}

#[output](script:
#output.print("gubg_include_paths =")
#$gubg_mods.each do |mod|
#  output.print(" -I #{mod}/src")
#end
#output.print(" -I extern/gubg.chaiscript/extern/ChaiScript/include")
#output.puts("")
#){
gubg_include_paths = -I extern/gubg.std/src -I extern/gubg.io/src -I extern/gubg.algo/src -I extern/gubg.math/src -I extern/gubg.chaiscript/src -I extern/gubg.chaiscript/extern/ChaiScript/include
#}
#[output](script:
#output.print("gubg_test_include_paths =")
#$gubg_mods.each do |mod|
#  output.print(" -I #{mod}/test/src")
#end
#output.puts("")
#){
gubg_test_include_paths = -I extern/gubg.std/test/src -I extern/gubg.io/test/src -I extern/gubg.algo/test/src -I extern/gubg.math/test/src -I extern/gubg.chaiscript/test/src
#}
cook_lib_include_paths  = -I lib/src $gubg_include_paths
cook_app_include_paths  = -I app/src
catch_include_paths = -I extern/gubg.std/extern/catch/single_include

#[output](script:
#$gubg_fns.each do |fn|
#  output.puts("build #{$b0_tmp}/#{$obj.call(fn)}: compile #{fn}")
#  output.puts("    include_paths = $gubg_include_paths")
#end
#){
build .b0/extern/gubg.std/src/gubg/platform/spawn.cpp.obj: compile extern/gubg.std/src/gubg/platform/spawn.cpp
    include_paths = $gubg_include_paths
build .b0/extern/gubg.io/src/gubg/Logger.cpp.obj: compile extern/gubg.io/src/gubg/Logger.cpp
    include_paths = $gubg_include_paths
build .b0/extern/gubg.io/src/gubg/OptionParser.cpp.obj: compile extern/gubg.io/src/gubg/OptionParser.cpp
    include_paths = $gubg_include_paths
build .b0/extern/gubg.io/src/gubg/Strange.cpp.obj: compile extern/gubg.io/src/gubg/Strange.cpp
    include_paths = $gubg_include_paths
build .b0/extern/gubg.io/src/gubg/bitmagic/bitmagic.cpp.obj: compile extern/gubg.io/src/gubg/bitmagic/bitmagic.cpp
    include_paths = $gubg_include_paths
build .b0/extern/gubg.io/src/gubg/cpp/Function.cpp.obj: compile extern/gubg.io/src/gubg/cpp/Function.cpp
    include_paths = $gubg_include_paths
build .b0/extern/gubg.io/src/gubg/cpp/IncludeGuard.cpp.obj: compile extern/gubg.io/src/gubg/cpp/IncludeGuard.cpp
    include_paths = $gubg_include_paths
build .b0/extern/gubg.io/src/gubg/cpp/Struct.cpp.obj: compile extern/gubg.io/src/gubg/cpp/Struct.cpp
    include_paths = $gubg_include_paths
build .b0/extern/gubg.io/src/gubg/file/File.cpp.obj: compile extern/gubg.io/src/gubg/file/File.cpp
    include_paths = $gubg_include_paths
build .b0/extern/gubg.io/src/gubg/file/Filesystem.cpp.obj: compile extern/gubg.io/src/gubg/file/Filesystem.cpp
    include_paths = $gubg_include_paths
build .b0/extern/gubg.io/src/gubg/file/Forest.cpp.obj: compile extern/gubg.io/src/gubg/file/Forest.cpp
    include_paths = $gubg_include_paths
build .b0/extern/gubg.io/src/gubg/file/Range.cpp.obj: compile extern/gubg.io/src/gubg/file/Range.cpp
    include_paths = $gubg_include_paths
build .b0/extern/gubg.io/src/gubg/hash/MD5.cpp.obj: compile extern/gubg.io/src/gubg/hash/MD5.cpp
    include_paths = $gubg_include_paths
build .b0/extern/gubg.io/src/gubg/ip/Address.cpp.obj: compile extern/gubg.io/src/gubg/ip/Address.cpp
    include_paths = $gubg_include_paths
build .b0/extern/gubg.io/src/gubg/ip/Endpoint.cpp.obj: compile extern/gubg.io/src/gubg/ip/Endpoint.cpp
    include_paths = $gubg_include_paths
build .b0/extern/gubg.io/src/gubg/ip/Port.cpp.obj: compile extern/gubg.io/src/gubg/ip/Port.cpp
    include_paths = $gubg_include_paths
build .b0/extern/gubg.io/src/gubg/ip/Socket.cpp.obj: compile extern/gubg.io/src/gubg/ip/Socket.cpp
    include_paths = $gubg_include_paths
build .b0/extern/gubg.io/src/gubg/ip/my/descriptor.cpp.obj: compile extern/gubg.io/src/gubg/ip/my/descriptor.cpp
    include_paths = $gubg_include_paths
build .b0/extern/gubg.io/src/gubg/ip/resolve.cpp.obj: compile extern/gubg.io/src/gubg/ip/resolve.cpp
    include_paths = $gubg_include_paths
build .b0/extern/gubg.io/src/gubg/markdown/Reader.cpp.obj: compile extern/gubg.io/src/gubg/markdown/Reader.cpp
    include_paths = $gubg_include_paths
build .b0/extern/gubg.io/src/gubg/markdown/ast/Writer.cpp.obj: compile extern/gubg.io/src/gubg/markdown/ast/Writer.cpp
    include_paths = $gubg_include_paths
build .b0/extern/gubg.io/src/gubg/naft/Reader.cpp.obj: compile extern/gubg.io/src/gubg/naft/Reader.cpp
    include_paths = $gubg_include_paths
build .b0/extern/gubg.io/src/gubg/parse/basic.cpp.obj: compile extern/gubg.io/src/gubg/parse/basic.cpp
    include_paths = $gubg_include_paths
build .b0/extern/gubg.io/src/gubg/parse/xml/Coding.cpp.obj: compile extern/gubg.io/src/gubg/parse/xml/Coding.cpp
    include_paths = $gubg_include_paths
build .b0/extern/gubg.io/src/gubg/serial/Endpoint.cpp.obj: compile extern/gubg.io/src/gubg/serial/Endpoint.cpp
    include_paths = $gubg_include_paths
build .b0/extern/gubg.io/src/gubg/std/filesystem.cpp.obj: compile extern/gubg.io/src/gubg/std/filesystem.cpp
    include_paths = $gubg_include_paths
build .b0/extern/gubg.io/src/gubg/wav/Reader.cpp.obj: compile extern/gubg.io/src/gubg/wav/Reader.cpp
    include_paths = $gubg_include_paths
build .b0/extern/gubg.io/src/gubg/wav/Writer.cpp.obj: compile extern/gubg.io/src/gubg/wav/Writer.cpp
    include_paths = $gubg_include_paths
build .b0/extern/gubg.io/src/gubg/xml/Reader.cpp.obj: compile extern/gubg.io/src/gubg/xml/Reader.cpp
    include_paths = $gubg_include_paths
build .b0/extern/gubg.io/src/gubg/xml/Writer.cpp.obj: compile extern/gubg.io/src/gubg/xml/Writer.cpp
    include_paths = $gubg_include_paths
build .b0/extern/gubg.math/src/gubg/prob/rng.cpp.obj: compile extern/gubg.math/src/gubg/prob/rng.cpp
    include_paths = $gubg_include_paths
#}
    
#[output](script:
#$cook_fns.each do |fn|
#  output.puts("build #{$b0_tmp}/#{$obj.call(fn)}: compile #{fn}")
#  output.puts("    include_paths = $cook_lib_include_paths")
#end
#){
build .b0/lib/src/cook/Content.cpp.obj: compile lib/src/cook/Content.cpp
    include_paths = $cook_lib_include_paths
build .b0/lib/src/cook/Context.cpp.obj: compile lib/src/cook/Context.cpp
    include_paths = $cook_lib_include_paths
build .b0/lib/src/cook/Hook.cpp.obj: compile lib/src/cook/Hook.cpp
    include_paths = $cook_lib_include_paths
build .b0/lib/src/cook/OS.cpp.obj: compile lib/src/cook/OS.cpp
    include_paths = $cook_lib_include_paths
build .b0/lib/src/cook/algo/Book.cpp.obj: compile lib/src/cook/algo/Book.cpp
    include_paths = $cook_lib_include_paths
build .b0/lib/src/cook/chai/Book.cpp.obj: compile lib/src/cook/chai/Book.cpp
    include_paths = $cook_lib_include_paths
build .b0/lib/src/cook/chai/Context.cpp.obj: compile lib/src/cook/chai/Context.cpp
    include_paths = $cook_lib_include_paths
build .b0/lib/src/cook/chai/Cook.cpp.obj: compile lib/src/cook/chai/Cook.cpp
    include_paths = $cook_lib_include_paths
build .b0/lib/src/cook/chai/File.cpp.obj: compile lib/src/cook/chai/File.cpp
    include_paths = $cook_lib_include_paths
build .b0/lib/src/cook/chai/Flags.cpp.obj: compile lib/src/cook/chai/Flags.cpp
    include_paths = $cook_lib_include_paths
build .b0/lib/src/cook/chai/KeyValue.cpp.obj: compile lib/src/cook/chai/KeyValue.cpp
    include_paths = $cook_lib_include_paths
build .b0/lib/src/cook/chai/Recipe.cpp.obj: compile lib/src/cook/chai/Recipe.cpp
    include_paths = $cook_lib_include_paths
build .b0/lib/src/cook/chai/Toolchain.cpp.obj: compile lib/src/cook/chai/Toolchain.cpp
    include_paths = $cook_lib_include_paths
build .b0/lib/src/cook/chai/ToolchainElement.cpp.obj: compile lib/src/cook/chai/ToolchainElement.cpp
    include_paths = $cook_lib_include_paths
build .b0/lib/src/cook/chai/UserData.cpp.obj: compile lib/src/cook/chai/UserData.cpp
    include_paths = $cook_lib_include_paths
build .b0/lib/src/cook/chai/module/Basic.cpp.obj: compile lib/src/cook/chai/module/Basic.cpp
    include_paths = $cook_lib_include_paths
build .b0/lib/src/cook/chai/module/Book.cpp.obj: compile lib/src/cook/chai/module/Book.cpp
    include_paths = $cook_lib_include_paths
build .b0/lib/src/cook/chai/module/Cook.cpp.obj: compile lib/src/cook/chai/module/Cook.cpp
    include_paths = $cook_lib_include_paths
build .b0/lib/src/cook/chai/module/Flags.cpp.obj: compile lib/src/cook/chai/module/Flags.cpp
    include_paths = $cook_lib_include_paths
build .b0/lib/src/cook/chai/module/Ingredient.cpp.obj: compile lib/src/cook/chai/module/Ingredient.cpp
    include_paths = $cook_lib_include_paths
build .b0/lib/src/cook/chai/module/RaiiIngredient.cpp.obj: compile lib/src/cook/chai/module/RaiiIngredient.cpp
    include_paths = $cook_lib_include_paths
build .b0/lib/src/cook/chai/module/Recipe.cpp.obj: compile lib/src/cook/chai/module/Recipe.cpp
    include_paths = $cook_lib_include_paths
build .b0/lib/src/cook/chai/module/Toolchain.cpp.obj: compile lib/src/cook/chai/module/Toolchain.cpp
    include_paths = $cook_lib_include_paths
build .b0/lib/src/cook/chai/module/ToolchainElement.cpp.obj: compile lib/src/cook/chai/module/ToolchainElement.cpp
    include_paths = $cook_lib_include_paths
build .b0/lib/src/cook/chai/module/Uri.cpp.obj: compile lib/src/cook/chai/module/Uri.cpp
    include_paths = $cook_lib_include_paths
build .b0/lib/src/cook/chai/mss.cpp.obj: compile lib/src/cook/chai/mss.cpp
    include_paths = $cook_lib_include_paths
build .b0/lib/src/cook/generator/CMake.cpp.obj: compile lib/src/cook/generator/CMake.cpp
    include_paths = $cook_lib_include_paths
build .b0/lib/src/cook/generator/HTML.cpp.obj: compile lib/src/cook/generator/HTML.cpp
    include_paths = $cook_lib_include_paths
build .b0/lib/src/cook/generator/Naft.cpp.obj: compile lib/src/cook/generator/Naft.cpp
    include_paths = $cook_lib_include_paths
build .b0/lib/src/cook/generator/Ninja.cpp.obj: compile lib/src/cook/generator/Ninja.cpp
    include_paths = $cook_lib_include_paths
build .b0/lib/src/cook/generator/graphviz/Component.cpp.obj: compile lib/src/cook/generator/graphviz/Component.cpp
    include_paths = $cook_lib_include_paths
build .b0/lib/src/cook/generator/graphviz/Dependency.cpp.obj: compile lib/src/cook/generator/graphviz/Dependency.cpp
    include_paths = $cook_lib_include_paths
build .b0/lib/src/cook/log/Node.cpp.obj: compile lib/src/cook/log/Node.cpp
    include_paths = $cook_lib_include_paths
build .b0/lib/src/cook/log/Scope.cpp.obj: compile lib/src/cook/log/Scope.cpp
    include_paths = $cook_lib_include_paths
build .b0/lib/src/cook/log/level.cpp.obj: compile lib/src/cook/log/level.cpp
    include_paths = $cook_lib_include_paths
build .b0/lib/src/cook/model/Book.cpp.obj: compile lib/src/cook/model/Book.cpp
    include_paths = $cook_lib_include_paths
build .b0/lib/src/cook/model/Dirs.cpp.obj: compile lib/src/cook/model/Dirs.cpp
    include_paths = $cook_lib_include_paths
build .b0/lib/src/cook/model/Element.cpp.obj: compile lib/src/cook/model/Element.cpp
    include_paths = $cook_lib_include_paths
build .b0/lib/src/cook/model/Library.cpp.obj: compile lib/src/cook/model/Library.cpp
    include_paths = $cook_lib_include_paths
build .b0/lib/src/cook/model/Recipe.cpp.obj: compile lib/src/cook/model/Recipe.cpp
    include_paths = $cook_lib_include_paths
build .b0/lib/src/cook/model/Uri.cpp.obj: compile lib/src/cook/model/Uri.cpp
    include_paths = $cook_lib_include_paths
build .b0/lib/src/cook/process/Menu.cpp.obj: compile lib/src/cook/process/Menu.cpp
    include_paths = $cook_lib_include_paths
build .b0/lib/src/cook/process/RecipeFilteredGraph.cpp.obj: compile lib/src/cook/process/RecipeFilteredGraph.cpp
    include_paths = $cook_lib_include_paths
build .b0/lib/src/cook/process/build/Graph.cpp.obj: compile lib/src/cook/process/build/Graph.cpp
    include_paths = $cook_lib_include_paths
build .b0/lib/src/cook/process/chef/CompileArchiveLink.cpp.obj: compile lib/src/cook/process/chef/CompileArchiveLink.cpp
    include_paths = $cook_lib_include_paths
build .b0/lib/src/cook/process/chef/Interface.cpp.obj: compile lib/src/cook/process/chef/Interface.cpp
    include_paths = $cook_lib_include_paths
build .b0/lib/src/cook/process/command/CommonImpl.cpp.obj: compile lib/src/cook/process/command/CommonImpl.cpp
    include_paths = $cook_lib_include_paths
build .b0/lib/src/cook/process/souschef/Archiver.cpp.obj: compile lib/src/cook/process/souschef/Archiver.cpp
    include_paths = $cook_lib_include_paths
build .b0/lib/src/cook/process/souschef/Compiler.cpp.obj: compile lib/src/cook/process/souschef/Compiler.cpp
    include_paths = $cook_lib_include_paths
build .b0/lib/src/cook/process/souschef/DependencyPropagator.cpp.obj: compile lib/src/cook/process/souschef/DependencyPropagator.cpp
    include_paths = $cook_lib_include_paths
build .b0/lib/src/cook/process/souschef/IncludePathSetter.cpp.obj: compile lib/src/cook/process/souschef/IncludePathSetter.cpp
    include_paths = $cook_lib_include_paths
build .b0/lib/src/cook/process/souschef/LinkLibrarySorter.cpp.obj: compile lib/src/cook/process/souschef/LinkLibrarySorter.cpp
    include_paths = $cook_lib_include_paths
build .b0/lib/src/cook/process/souschef/Linker.cpp.obj: compile lib/src/cook/process/souschef/Linker.cpp
    include_paths = $cook_lib_include_paths
build .b0/lib/src/cook/process/souschef/PathExtraction.cpp.obj: compile lib/src/cook/process/souschef/PathExtraction.cpp
    include_paths = $cook_lib_include_paths
build .b0/lib/src/cook/process/souschef/RecipeNamer.cpp.obj: compile lib/src/cook/process/souschef/RecipeNamer.cpp
    include_paths = $cook_lib_include_paths
build .b0/lib/src/cook/process/souschef/Resolver.cpp.obj: compile lib/src/cook/process/souschef/Resolver.cpp
    include_paths = $cook_lib_include_paths
build .b0/lib/src/cook/process/souschef/ScriptRunner.cpp.obj: compile lib/src/cook/process/souschef/ScriptRunner.cpp
    include_paths = $cook_lib_include_paths
build .b0/lib/src/cook/process/toolchain/Configuration.cpp.obj: compile lib/src/cook/process/toolchain/Configuration.cpp
    include_paths = $cook_lib_include_paths
build .b0/lib/src/cook/process/toolchain/Element.cpp.obj: compile lib/src/cook/process/toolchain/Element.cpp
    include_paths = $cook_lib_include_paths
build .b0/lib/src/cook/process/toolchain/Loader.cpp.obj: compile lib/src/cook/process/toolchain/Loader.cpp
    include_paths = $cook_lib_include_paths
build .b0/lib/src/cook/process/toolchain/Manager.cpp.obj: compile lib/src/cook/process/toolchain/Manager.cpp
    include_paths = $cook_lib_include_paths
build .b0/lib/src/cook/process/toolchain/serialize/GCC.cpp.obj: compile lib/src/cook/process/toolchain/serialize/GCC.cpp
    include_paths = $cook_lib_include_paths
build .b0/lib/src/cook/process/toolchain/serialize/MSVC.cpp.obj: compile lib/src/cook/process/toolchain/serialize/MSVC.cpp
    include_paths = $cook_lib_include_paths
build .b0/lib/src/cook/process/toolchain/serialize/Standard.cpp.obj: compile lib/src/cook/process/toolchain/serialize/Standard.cpp
    include_paths = $cook_lib_include_paths
build .b0/lib/src/cook/rules/ASM.cpp.obj: compile lib/src/cook/rules/ASM.cpp
    include_paths = $cook_lib_include_paths
build .b0/lib/src/cook/rules/Binary.cpp.obj: compile lib/src/cook/rules/Binary.cpp
    include_paths = $cook_lib_include_paths
build .b0/lib/src/cook/rules/Bundle.cpp.obj: compile lib/src/cook/rules/Bundle.cpp
    include_paths = $cook_lib_include_paths
build .b0/lib/src/cook/rules/C_family.cpp.obj: compile lib/src/cook/rules/C_family.cpp
    include_paths = $cook_lib_include_paths
build .b0/lib/src/cook/rules/Definition.cpp.obj: compile lib/src/cook/rules/Definition.cpp
    include_paths = $cook_lib_include_paths
build .b0/lib/src/cook/rules/Extensions.cpp.obj: compile lib/src/cook/rules/Extensions.cpp
    include_paths = $cook_lib_include_paths
build .b0/lib/src/cook/rules/Interface.cpp.obj: compile lib/src/cook/rules/Interface.cpp
    include_paths = $cook_lib_include_paths
build .b0/lib/src/cook/rules/RuleSet.cpp.obj: compile lib/src/cook/rules/RuleSet.cpp
    include_paths = $cook_lib_include_paths
build .b0/lib/src/cook/util/File.cpp.obj: compile lib/src/cook/util/File.cpp
    include_paths = $cook_lib_include_paths
#}

build .b0/gubg.std/src/catch_runner.cpp.obj: compile extern/gubg.std/src/catch_runner.cpp
    include_paths = $catch_include_paths
#[output](script:
#$gubg_test_fns.each do |fn|
#  output.puts("build #{$b0_tmp}/#{$obj.call(fn)}: compile #{fn}")
#  output.puts("    include_paths = $gubg_include_paths $gubg_test_include_paths $catch_include_paths")
#end
#){
build .b0/extern/gubg.std/test/src/gubg/History_tests.cpp.obj: compile extern/gubg.std/test/src/gubg/History_tests.cpp
    include_paths = $gubg_include_paths $gubg_test_include_paths $catch_include_paths
build .b0/extern/gubg.std/test/src/gubg/OnlyOnce_tests.cpp.obj: compile extern/gubg.std/test/src/gubg/OnlyOnce_tests.cpp
    include_paths = $gubg_include_paths $gubg_test_include_paths $catch_include_paths
build .b0/extern/gubg.std/test/src/gubg/Range_tests.cpp.obj: compile extern/gubg.std/test/src/gubg/Range_tests.cpp
    include_paths = $gubg_include_paths $gubg_test_include_paths $catch_include_paths
build .b0/extern/gubg.std/test/src/gubg/Signal_tests.cpp.obj: compile extern/gubg.std/test/src/gubg/Signal_tests.cpp
    include_paths = $gubg_include_paths $gubg_test_include_paths $catch_include_paths
build .b0/extern/gubg.std/test/src/gubg/Transition_tests.cpp.obj: compile extern/gubg.std/test/src/gubg/Transition_tests.cpp
    include_paths = $gubg_include_paths $gubg_test_include_paths $catch_include_paths
build .b0/extern/gubg.std/test/src/gubg/array/Pool_tests.cpp.obj: compile extern/gubg.std/test/src/gubg/array/Pool_tests.cpp
    include_paths = $gubg_include_paths $gubg_test_include_paths $catch_include_paths
build .b0/extern/gubg.std/test/src/gubg/iterator/Transform_tests.cpp.obj: compile extern/gubg.std/test/src/gubg/iterator/Transform_tests.cpp
    include_paths = $gubg_include_paths $gubg_test_include_paths $catch_include_paths
build .b0/extern/gubg.std/test/src/gubg/ix/Range_tests.cpp.obj: compile extern/gubg.std/test/src/gubg/ix/Range_tests.cpp
    include_paths = $gubg_include_paths $gubg_test_include_paths $catch_include_paths
build .b0/extern/gubg.std/test/src/gubg/macro/variadic_tests.cpp.obj: compile extern/gubg.std/test/src/gubg/macro/variadic_tests.cpp
    include_paths = $gubg_include_paths $gubg_test_include_paths $catch_include_paths
build .b0/extern/gubg.std/test/src/gubg/mss_tests.cpp.obj: compile extern/gubg.std/test/src/gubg/mss_tests.cpp
    include_paths = $gubg_include_paths $gubg_test_include_paths $catch_include_paths
build .b0/extern/gubg.std/test/src/gubg/pattern/SignalSlot_tests.cpp.obj: compile extern/gubg.std/test/src/gubg/pattern/SignalSlot_tests.cpp
    include_paths = $gubg_include_paths $gubg_test_include_paths $catch_include_paths
build .b0/extern/gubg.std/test/src/gubg/thread/Pool_tests.cpp.obj: compile extern/gubg.std/test/src/gubg/thread/Pool_tests.cpp
    include_paths = $gubg_include_paths $gubg_test_include_paths $catch_include_paths
build .b0/extern/gubg.std/test/src/gubg/thread/Semaphore_tests.cpp.obj: compile extern/gubg.std/test/src/gubg/thread/Semaphore_tests.cpp
    include_paths = $gubg_include_paths $gubg_test_include_paths $catch_include_paths
build .b0/extern/gubg.std/test/src/gubg/time/Date_tests.cpp.obj: compile extern/gubg.std/test/src/gubg/time/Date_tests.cpp
    include_paths = $gubg_include_paths $gubg_test_include_paths $catch_include_paths
build .b0/extern/gubg.std/test/src/gubg/tmp/FindBaseByName_tests.cpp.obj: compile extern/gubg.std/test/src/gubg/tmp/FindBaseByName_tests.cpp
    include_paths = $gubg_include_paths $gubg_test_include_paths $catch_include_paths
build .b0/extern/gubg.std/test/src/gubg/tmp/If_tests.cpp.obj: compile extern/gubg.std/test/src/gubg/tmp/If_tests.cpp
    include_paths = $gubg_include_paths $gubg_test_include_paths $catch_include_paths
build .b0/extern/gubg.std/test/src/gubg/tmp/IntType_tests.cpp.obj: compile extern/gubg.std/test/src/gubg/tmp/IntType_tests.cpp
    include_paths = $gubg_include_paths $gubg_test_include_paths $catch_include_paths
build .b0/extern/gubg.std/test/src/gubg/tmp/SFINAE_tests.cpp.obj: compile extern/gubg.std/test/src/gubg/tmp/SFINAE_tests.cpp
    include_paths = $gubg_include_paths $gubg_test_include_paths $catch_include_paths
build .b0/extern/gubg.std/test/src/gubg/tmp/TypeList_tests.cpp.obj: compile extern/gubg.std/test/src/gubg/tmp/TypeList_tests.cpp
    include_paths = $gubg_include_paths $gubg_test_include_paths $catch_include_paths
build .b0/extern/gubg.std/test/src/gubg/tuple/ForEach_tests.cpp.obj: compile extern/gubg.std/test/src/gubg/tuple/ForEach_tests.cpp
    include_paths = $gubg_include_paths $gubg_test_include_paths $catch_include_paths
build .b0/extern/gubg.std/test/src/gubg/tuple/TypeTransform_tests.cpp.obj: compile extern/gubg.std/test/src/gubg/tuple/TypeTransform_tests.cpp
    include_paths = $gubg_include_paths $gubg_test_include_paths $catch_include_paths
build .b0/extern/gubg.io/test/src/gubg/Integer_tests.cpp.obj: compile extern/gubg.io/test/src/gubg/Integer_tests.cpp
    include_paths = $gubg_include_paths $gubg_test_include_paths $catch_include_paths
build .b0/extern/gubg.io/test/src/gubg/Strange_tests.cpp.obj: compile extern/gubg.io/test/src/gubg/Strange_tests.cpp
    include_paths = $gubg_include_paths $gubg_test_include_paths $catch_include_paths
build .b0/extern/gubg.io/test/src/gubg/bit/Reader_tests.cpp.obj: compile extern/gubg.io/test/src/gubg/bit/Reader_tests.cpp
    include_paths = $gubg_include_paths $gubg_test_include_paths $catch_include_paths
build .b0/extern/gubg.io/test/src/gubg/bit/Writer_tests.cpp.obj: compile extern/gubg.io/test/src/gubg/bit/Writer_tests.cpp
    include_paths = $gubg_include_paths $gubg_test_include_paths $catch_include_paths
build .b0/extern/gubg.io/test/src/gubg/bit/gr/Codec_tests.cpp.obj: compile extern/gubg.io/test/src/gubg/bit/gr/Codec_tests.cpp
    include_paths = $gubg_include_paths $gubg_test_include_paths $catch_include_paths
build .b0/extern/gubg.io/test/src/gubg/bit/gr/Sequence_tests.cpp.obj: compile extern/gubg.io/test/src/gubg/bit/gr/Sequence_tests.cpp
    include_paths = $gubg_include_paths $gubg_test_include_paths $catch_include_paths
build .b0/extern/gubg.io/test/src/gubg/bit/oor/Coded_tests.cpp.obj: compile extern/gubg.io/test/src/gubg/bit/oor/Coded_tests.cpp
    include_paths = $gubg_include_paths $gubg_test_include_paths $catch_include_paths
build .b0/extern/gubg.io/test/src/gubg/bit/oor/util_tests.cpp.obj: compile extern/gubg.io/test/src/gubg/bit/oor/util_tests.cpp
    include_paths = $gubg_include_paths $gubg_test_include_paths $catch_include_paths
build .b0/extern/gubg.io/test/src/gubg/bit/sign/codec_tests.cpp.obj: compile extern/gubg.io/test/src/gubg/bit/sign/codec_tests.cpp
    include_paths = $gubg_include_paths $gubg_test_include_paths $catch_include_paths
build .b0/extern/gubg.io/test/src/gubg/bitmagic/bitmagic_tests.cpp.obj: compile extern/gubg.io/test/src/gubg/bitmagic/bitmagic_tests.cpp
    include_paths = $gubg_include_paths $gubg_test_include_paths $catch_include_paths
build .b0/extern/gubg.io/test/src/gubg/cli/Range_tests.cpp.obj: compile extern/gubg.io/test/src/gubg/cli/Range_tests.cpp
    include_paths = $gubg_include_paths $gubg_test_include_paths $catch_include_paths
build .b0/extern/gubg.io/test/src/gubg/file/Creater_tests.cpp.obj: compile extern/gubg.io/test/src/gubg/file/Creater_tests.cpp
    include_paths = $gubg_include_paths $gubg_test_include_paths $catch_include_paths
build .b0/extern/gubg.io/test/src/gubg/file/File_tests.cpp.obj: compile extern/gubg.io/test/src/gubg/file/File_tests.cpp
    include_paths = $gubg_include_paths $gubg_test_include_paths $catch_include_paths
build .b0/extern/gubg.io/test/src/gubg/file/Filesystem_tests.cpp.obj: compile extern/gubg.io/test/src/gubg/file/Filesystem_tests.cpp
    include_paths = $gubg_include_paths $gubg_test_include_paths $catch_include_paths
build .b0/extern/gubg.io/test/src/gubg/file/Forest_tests.cpp.obj: compile extern/gubg.io/test/src/gubg/file/Forest_tests.cpp
    include_paths = $gubg_include_paths $gubg_test_include_paths $catch_include_paths
build .b0/extern/gubg.io/test/src/gubg/frame/Recode_tests.cpp.obj: compile extern/gubg.io/test/src/gubg/frame/Recode_tests.cpp
    include_paths = $gubg_include_paths $gubg_test_include_paths $catch_include_paths
build .b0/extern/gubg.io/test/src/gubg/hash/MD5_tests.cpp.obj: compile extern/gubg.io/test/src/gubg/hash/MD5_tests.cpp
    include_paths = $gubg_include_paths $gubg_test_include_paths $catch_include_paths
build .b0/extern/gubg.io/test/src/gubg/ip/Address_tests.cpp.obj: compile extern/gubg.io/test/src/gubg/ip/Address_tests.cpp
    include_paths = $gubg_include_paths $gubg_test_include_paths $catch_include_paths
build .b0/extern/gubg.io/test/src/gubg/ip/Endpoint_tests.cpp.obj: compile extern/gubg.io/test/src/gubg/ip/Endpoint_tests.cpp
    include_paths = $gubg_include_paths $gubg_test_include_paths $catch_include_paths
build .b0/extern/gubg.io/test/src/gubg/ip/Socket_tests.cpp.obj: compile extern/gubg.io/test/src/gubg/ip/Socket_tests.cpp
    include_paths = $gubg_include_paths $gubg_test_include_paths $catch_include_paths
build .b0/extern/gubg.io/test/src/gubg/ip/resolve_tests.cpp.obj: compile extern/gubg.io/test/src/gubg/ip/resolve_tests.cpp
    include_paths = $gubg_include_paths $gubg_test_include_paths $catch_include_paths
build .b0/extern/gubg.io/test/src/gubg/ip/tcp/ClientServer_tests.cpp.obj: compile extern/gubg.io/test/src/gubg/ip/tcp/ClientServer_tests.cpp
    include_paths = $gubg_include_paths $gubg_test_include_paths $catch_include_paths
build .b0/extern/gubg.io/test/src/gubg/markdown/Reader_tests.cpp.obj: compile extern/gubg.io/test/src/gubg/markdown/Reader_tests.cpp
    include_paths = $gubg_include_paths $gubg_test_include_paths $catch_include_paths
build .b0/extern/gubg.io/test/src/gubg/markdown/ast/Tree_tests.cpp.obj: compile extern/gubg.io/test/src/gubg/markdown/ast/Tree_tests.cpp
    include_paths = $gubg_include_paths $gubg_test_include_paths $catch_include_paths
build .b0/extern/gubg.io/test/src/gubg/naft/Document_tests.cpp.obj: compile extern/gubg.io/test/src/gubg/naft/Document_tests.cpp
    include_paths = $gubg_include_paths $gubg_test_include_paths $catch_include_paths
build .b0/extern/gubg.io/test/src/gubg/naft/Reader_tests.cpp.obj: compile extern/gubg.io/test/src/gubg/naft/Reader_tests.cpp
    include_paths = $gubg_include_paths $gubg_test_include_paths $catch_include_paths
build .b0/extern/gubg.io/test/src/gubg/parse/naft/Parser_tests.cpp.obj: compile extern/gubg.io/test/src/gubg/parse/naft/Parser_tests.cpp
    include_paths = $gubg_include_paths $gubg_test_include_paths $catch_include_paths
build .b0/extern/gubg.io/test/src/gubg/parse/xml/Coding_tests.cpp.obj: compile extern/gubg.io/test/src/gubg/parse/xml/Coding_tests.cpp
    include_paths = $gubg_include_paths $gubg_test_include_paths $catch_include_paths
build .b0/extern/gubg.io/test/src/gubg/parse/xml/Parser_tests.cpp.obj: compile extern/gubg.io/test/src/gubg/parse/xml/Parser_tests.cpp
    include_paths = $gubg_include_paths $gubg_test_include_paths $catch_include_paths
build .b0/extern/gubg.io/test/src/gubg/rs485/Bus_tests.cpp.obj: compile extern/gubg.io/test/src/gubg/rs485/Bus_tests.cpp
    include_paths = $gubg_include_paths $gubg_test_include_paths $catch_include_paths
build .b0/extern/gubg.io/test/src/gubg/s11n/Reader_tests.cpp.obj: compile extern/gubg.io/test/src/gubg/s11n/Reader_tests.cpp
    include_paths = $gubg_include_paths $gubg_test_include_paths $catch_include_paths
build .b0/extern/gubg.io/test/src/gubg/s11n/Writer_tests.cpp.obj: compile extern/gubg.io/test/src/gubg/s11n/Writer_tests.cpp
    include_paths = $gubg_include_paths $gubg_test_include_paths $catch_include_paths
build .b0/extern/gubg.io/test/src/gubg/sedes/Catalogue_tests.cpp.obj: compile extern/gubg.io/test/src/gubg/sedes/Catalogue_tests.cpp
    include_paths = $gubg_include_paths $gubg_test_include_paths $catch_include_paths
build .b0/extern/gubg.io/test/src/gubg/serial/Endpoint_tests.cpp.obj: compile extern/gubg.io/test/src/gubg/serial/Endpoint_tests.cpp
    include_paths = $gubg_include_paths $gubg_test_include_paths $catch_include_paths
build .b0/extern/gubg.io/test/src/gubg/std/filesystem_tests.cpp.obj: compile extern/gubg.io/test/src/gubg/std/filesystem_tests.cpp
    include_paths = $gubg_include_paths $gubg_test_include_paths $catch_include_paths
build .b0/extern/gubg.io/test/src/gubg/string/Buffer_tests.cpp.obj: compile extern/gubg.io/test/src/gubg/string/Buffer_tests.cpp
    include_paths = $gubg_include_paths $gubg_test_include_paths $catch_include_paths
build .b0/extern/gubg.io/test/src/gubg/string_tests.cpp.obj: compile extern/gubg.io/test/src/gubg/string_tests.cpp
    include_paths = $gubg_include_paths $gubg_test_include_paths $catch_include_paths
build .b0/extern/gubg.io/test/src/gubg/svg/Turtle_tests.cpp.obj: compile extern/gubg.io/test/src/gubg/svg/Turtle_tests.cpp
    include_paths = $gubg_include_paths $gubg_test_include_paths $catch_include_paths
build .b0/extern/gubg.io/test/src/gubg/t2/Builder_tests.cpp.obj: compile extern/gubg.io/test/src/gubg/t2/Builder_tests.cpp
    include_paths = $gubg_include_paths $gubg_test_include_paths $catch_include_paths
build .b0/extern/gubg.io/test/src/gubg/t2/Parser_tests.cpp.obj: compile extern/gubg.io/test/src/gubg/t2/Parser_tests.cpp
    include_paths = $gubg_include_paths $gubg_test_include_paths $catch_include_paths
build .b0/extern/gubg.io/test/src/gubg/t2/Segmenter_tests.cpp.obj: compile extern/gubg.io/test/src/gubg/t2/Segmenter_tests.cpp
    include_paths = $gubg_include_paths $gubg_test_include_paths $catch_include_paths
build .b0/extern/gubg.io/test/src/gubg/terminal/Color_tests.cpp.obj: compile extern/gubg.io/test/src/gubg/terminal/Color_tests.cpp
    include_paths = $gubg_include_paths $gubg_test_include_paths $catch_include_paths
build .b0/extern/gubg.io/test/src/gubg/wrap/Xcoder_tests.cpp.obj: compile extern/gubg.io/test/src/gubg/wrap/Xcoder_tests.cpp
    include_paths = $gubg_include_paths $gubg_test_include_paths $catch_include_paths
build .b0/extern/gubg.io/test/src/gubg/xml/Reader_tests.cpp.obj: compile extern/gubg.io/test/src/gubg/xml/Reader_tests.cpp
    include_paths = $gubg_include_paths $gubg_test_include_paths $catch_include_paths
build .b0/extern/gubg.io/test/src/gubg/xml/SVG_tests.cpp.obj: compile extern/gubg.io/test/src/gubg/xml/SVG_tests.cpp
    include_paths = $gubg_include_paths $gubg_test_include_paths $catch_include_paths
build .b0/extern/gubg.io/test/src/gubg/xml/Writer_tests.cpp.obj: compile extern/gubg.io/test/src/gubg/xml/Writer_tests.cpp
    include_paths = $gubg_include_paths $gubg_test_include_paths $catch_include_paths
build .b0/extern/gubg.algo/test/src/gubg/eq/Processor_tests.cpp.obj: compile extern/gubg.algo/test/src/gubg/eq/Processor_tests.cpp
    include_paths = $gubg_include_paths $gubg_test_include_paths $catch_include_paths
build .b0/extern/gubg.algo/test/src/gubg/gp/World_tests.cpp.obj: compile extern/gubg.algo/test/src/gubg/gp/World_tests.cpp
    include_paths = $gubg_include_paths $gubg_test_include_paths $catch_include_paths
build .b0/extern/gubg.algo/test/src/gubg/gp/support/Formula_tests.cpp.obj: compile extern/gubg.algo/test/src/gubg/gp/support/Formula_tests.cpp
    include_paths = $gubg_include_paths $gubg_test_include_paths $catch_include_paths
build .b0/extern/gubg.algo/test/src/gubg/graph/AdjacencyList_tests.cpp.obj: compile extern/gubg.algo/test/src/gubg/graph/AdjacencyList_tests.cpp
    include_paths = $gubg_include_paths $gubg_test_include_paths $catch_include_paths
build .b0/extern/gubg.algo/test/src/gubg/graph/Graph_tests.cpp.obj: compile extern/gubg.algo/test/src/gubg/graph/Graph_tests.cpp
    include_paths = $gubg_include_paths $gubg_test_include_paths $catch_include_paths
build .b0/extern/gubg.algo/test/src/gubg/graph/NPartite_tests.cpp.obj: compile extern/gubg.algo/test/src/gubg/graph/NPartite_tests.cpp
    include_paths = $gubg_include_paths $gubg_test_include_paths $catch_include_paths
build .b0/extern/gubg.algo/test/src/gubg/graph/TopologicalSort_tests.cpp.obj: compile extern/gubg.algo/test/src/gubg/graph/TopologicalSort_tests.cpp
    include_paths = $gubg_include_paths $gubg_test_include_paths $catch_include_paths
build .b0/extern/gubg.algo/test/src/gubg/optimization/SCG_tests.cpp.obj: compile extern/gubg.algo/test/src/gubg/optimization/SCG_tests.cpp
    include_paths = $gubg_include_paths $gubg_test_include_paths $catch_include_paths
build .b0/extern/gubg.algo/test/src/gubg/pid/Controller_tests.cpp.obj: compile extern/gubg.algo/test/src/gubg/pid/Controller_tests.cpp
    include_paths = $gubg_include_paths $gubg_test_include_paths $catch_include_paths
build .b0/extern/gubg.algo/test/src/gubg/planning/Planning_tests.cpp.obj: compile extern/gubg.algo/test/src/gubg/planning/Planning_tests.cpp
    include_paths = $gubg_include_paths $gubg_test_include_paths $catch_include_paths
build .b0/extern/gubg.algo/test/src/gubg/planning/Task_tests.cpp.obj: compile extern/gubg.algo/test/src/gubg/planning/Task_tests.cpp
    include_paths = $gubg_include_paths $gubg_test_include_paths $catch_include_paths
build .b0/extern/gubg.algo/test/src/gubg/signal/LinearChirp_tests.cpp.obj: compile extern/gubg.algo/test/src/gubg/signal/LinearChirp_tests.cpp
    include_paths = $gubg_include_paths $gubg_test_include_paths $catch_include_paths
build .b0/extern/gubg.algo/test/src/gubg/smooth/Quadratic_tests.cpp.obj: compile extern/gubg.algo/test/src/gubg/smooth/Quadratic_tests.cpp
    include_paths = $gubg_include_paths $gubg_test_include_paths $catch_include_paths
build .b0/extern/gubg.algo/test/src/gubg/tree/Tree_tests.cpp.obj: compile extern/gubg.algo/test/src/gubg/tree/Tree_tests.cpp
    include_paths = $gubg_include_paths $gubg_test_include_paths $catch_include_paths
build .b0/extern/gubg.algo/test/src/gubg/tree/grow_tests.cpp.obj: compile extern/gubg.algo/test/src/gubg/tree/grow_tests.cpp
    include_paths = $gubg_include_paths $gubg_test_include_paths $catch_include_paths
build .b0/extern/gubg.algo/test/src/gubg/xtree/Model_tests.cpp.obj: compile extern/gubg.algo/test/src/gubg/xtree/Model_tests.cpp
    include_paths = $gubg_include_paths $gubg_test_include_paths $catch_include_paths
build .b0/extern/gubg.math/test/src/gubg/Matrix_tests.cpp.obj: compile extern/gubg.math/test/src/gubg/Matrix_tests.cpp
    include_paths = $gubg_include_paths $gubg_test_include_paths $catch_include_paths
build .b0/extern/gubg.math/test/src/gubg/Rosenbrock_tests.cpp.obj: compile extern/gubg.math/test/src/gubg/Rosenbrock_tests.cpp
    include_paths = $gubg_include_paths $gubg_test_include_paths $catch_include_paths
build .b0/extern/gubg.math/test/src/gubg/RunningSum_tests.cpp.obj: compile extern/gubg.math/test/src/gubg/RunningSum_tests.cpp
    include_paths = $gubg_include_paths $gubg_test_include_paths $catch_include_paths
build .b0/extern/gubg.math/test/src/gubg/decay/Average_tests.cpp.obj: compile extern/gubg.math/test/src/gubg/decay/Average_tests.cpp
    include_paths = $gubg_include_paths $gubg_test_include_paths $catch_include_paths
build .b0/extern/gubg.math/test/src/gubg/decay/Sum_tests.cpp.obj: compile extern/gubg.math/test/src/gubg/decay/Sum_tests.cpp
    include_paths = $gubg_include_paths $gubg_test_include_paths $catch_include_paths
build .b0/extern/gubg.math/test/src/gubg/fxp/Number_tests.cpp.obj: compile extern/gubg.math/test/src/gubg/fxp/Number_tests.cpp
    include_paths = $gubg_include_paths $gubg_test_include_paths $catch_include_paths
build .b0/extern/gubg.math/test/src/gubg/ilog_tests.cpp.obj: compile extern/gubg.math/test/src/gubg/ilog_tests.cpp
    include_paths = $gubg_include_paths $gubg_test_include_paths $catch_include_paths
build .b0/extern/gubg.math/test/src/gubg/tensor/Tensor_tests.cpp.obj: compile extern/gubg.math/test/src/gubg/tensor/Tensor_tests.cpp
    include_paths = $gubg_include_paths $gubg_test_include_paths $catch_include_paths
build .b0/extern/gubg.chaiscript/test/src/gubg/chai/Regex_tests.cpp.obj: compile extern/gubg.chaiscript/test/src/gubg/chai/Regex_tests.cpp
    include_paths = $gubg_include_paths $gubg_test_include_paths $catch_include_paths
build .b0/extern/gubg.chaiscript/test/src/gubg/chai/inject_tests.cpp.obj: compile extern/gubg.chaiscript/test/src/gubg/chai/inject_tests.cpp
    include_paths = $gubg_include_paths $gubg_test_include_paths $catch_include_paths
build .b0/extern/gubg.chaiscript/test/src/gubg/chai/test/Engine.cpp.obj: compile extern/gubg.chaiscript/test/src/gubg/chai/test/Engine.cpp
    include_paths = $gubg_include_paths $gubg_test_include_paths $catch_include_paths
#}
#[output](script:
#$cook_test_fns.each do |fn|
#  output.puts("build #{$b0_tmp}/#{$obj.call(fn)}: compile #{fn}")
#  output.puts("    include_paths = $cook_lib_include_paths $catch_include_paths ")
#end
#){
build .b0/lib/test/src/cook/LanguageTypePair_tests.cpp.obj: compile lib/test/src/cook/LanguageTypePair_tests.cpp
    include_paths = $cook_lib_include_paths $catch_include_paths 
build .b0/lib/test/src/cook/Menu_tests.cpp.obj: compile lib/test/src/cook/Menu_tests.cpp
    include_paths = $cook_lib_include_paths $catch_include_paths 
build .b0/lib/test/src/cook/Result_tests.cpp.obj: compile lib/test/src/cook/Result_tests.cpp
    include_paths = $cook_lib_include_paths $catch_include_paths 
build .b0/lib/test/src/cook/ingredient/Collection_tests.cpp.obj: compile lib/test/src/cook/ingredient/Collection_tests.cpp
    include_paths = $cook_lib_include_paths $catch_include_paths 
build .b0/lib/test/src/cook/model/Uri_tests.cpp.obj: compile lib/test/src/cook/model/Uri_tests.cpp
    include_paths = $cook_lib_include_paths $catch_include_paths 
build .b0/lib/test/src/cook/rules/C_family_tests.cpp.obj: compile lib/test/src/cook/rules/C_family_tests.cpp
    include_paths = $cook_lib_include_paths $catch_include_paths 
build .b0/lib/test/src/cook/rules/Extensions_tests.cpp.obj: compile lib/test/src/cook/rules/Extensions_tests.cpp
    include_paths = $cook_lib_include_paths $catch_include_paths 
build .b0/lib/test/src/cook/rules/Resolve_tests.cpp.obj: compile lib/test/src/cook/rules/Resolve_tests.cpp
    include_paths = $cook_lib_include_paths $catch_include_paths 
#}

#[output](script:
#$cook_app_fns.each do |fn|
#  output.puts("build #{$b0_tmp}/#{$obj.call(fn)}: compile #{fn}")
#  output.puts("    include_paths = $cook_app_include_paths $cook_lib_include_paths ")
#end
#){
build .b0/app/src/cook/App.cpp.obj: compile app/src/cook/App.cpp
    include_paths = $cook_app_include_paths $cook_lib_include_paths 
build .b0/app/src/cook/app/Options.cpp.obj: compile app/src/cook/app/Options.cpp
    include_paths = $cook_app_include_paths $cook_lib_include_paths 
build .b0/app/src/main.cpp.obj: compile app/src/main.cpp
    include_paths = $cook_app_include_paths $cook_lib_include_paths 
#}


#[output](script:
#output.puts("build #{$b0_build_dir}/libgubg.a: archive $")
#$gubg_fns.each do |fn|
#  output.puts("    #{$b0_tmp}/#{$obj.call(fn)} $")
#end
#output.puts
#){
build build/b0/libgubg.a: archive $
    .b0/extern/gubg.std/src/gubg/platform/spawn.cpp.obj $
    .b0/extern/gubg.io/src/gubg/Logger.cpp.obj $
    .b0/extern/gubg.io/src/gubg/OptionParser.cpp.obj $
    .b0/extern/gubg.io/src/gubg/Strange.cpp.obj $
    .b0/extern/gubg.io/src/gubg/bitmagic/bitmagic.cpp.obj $
    .b0/extern/gubg.io/src/gubg/cpp/Function.cpp.obj $
    .b0/extern/gubg.io/src/gubg/cpp/IncludeGuard.cpp.obj $
    .b0/extern/gubg.io/src/gubg/cpp/Struct.cpp.obj $
    .b0/extern/gubg.io/src/gubg/file/File.cpp.obj $
    .b0/extern/gubg.io/src/gubg/file/Filesystem.cpp.obj $
    .b0/extern/gubg.io/src/gubg/file/Forest.cpp.obj $
    .b0/extern/gubg.io/src/gubg/file/Range.cpp.obj $
    .b0/extern/gubg.io/src/gubg/hash/MD5.cpp.obj $
    .b0/extern/gubg.io/src/gubg/ip/Address.cpp.obj $
    .b0/extern/gubg.io/src/gubg/ip/Endpoint.cpp.obj $
    .b0/extern/gubg.io/src/gubg/ip/Port.cpp.obj $
    .b0/extern/gubg.io/src/gubg/ip/Socket.cpp.obj $
    .b0/extern/gubg.io/src/gubg/ip/my/descriptor.cpp.obj $
    .b0/extern/gubg.io/src/gubg/ip/resolve.cpp.obj $
    .b0/extern/gubg.io/src/gubg/markdown/Reader.cpp.obj $
    .b0/extern/gubg.io/src/gubg/markdown/ast/Writer.cpp.obj $
    .b0/extern/gubg.io/src/gubg/naft/Reader.cpp.obj $
    .b0/extern/gubg.io/src/gubg/parse/basic.cpp.obj $
    .b0/extern/gubg.io/src/gubg/parse/xml/Coding.cpp.obj $
    .b0/extern/gubg.io/src/gubg/serial/Endpoint.cpp.obj $
    .b0/extern/gubg.io/src/gubg/std/filesystem.cpp.obj $
    .b0/extern/gubg.io/src/gubg/wav/Reader.cpp.obj $
    .b0/extern/gubg.io/src/gubg/wav/Writer.cpp.obj $
    .b0/extern/gubg.io/src/gubg/xml/Reader.cpp.obj $
    .b0/extern/gubg.io/src/gubg/xml/Writer.cpp.obj $
    .b0/extern/gubg.math/src/gubg/prob/rng.cpp.obj $

#}

#[output](script:
#output.puts("build #{$b0_build_dir}/libcook.a: archive $")
#$cook_fns.each do |fn|
#  output.puts("    #{$b0_tmp}/#{$obj.call(fn)} $")
#end
#output.puts
#){
build build/b0/libcook.a: archive $
    .b0/lib/src/cook/Content.cpp.obj $
    .b0/lib/src/cook/Context.cpp.obj $
    .b0/lib/src/cook/Hook.cpp.obj $
    .b0/lib/src/cook/OS.cpp.obj $
    .b0/lib/src/cook/algo/Book.cpp.obj $
    .b0/lib/src/cook/chai/Book.cpp.obj $
    .b0/lib/src/cook/chai/Context.cpp.obj $
    .b0/lib/src/cook/chai/Cook.cpp.obj $
    .b0/lib/src/cook/chai/File.cpp.obj $
    .b0/lib/src/cook/chai/Flags.cpp.obj $
    .b0/lib/src/cook/chai/KeyValue.cpp.obj $
    .b0/lib/src/cook/chai/Recipe.cpp.obj $
    .b0/lib/src/cook/chai/Toolchain.cpp.obj $
    .b0/lib/src/cook/chai/ToolchainElement.cpp.obj $
    .b0/lib/src/cook/chai/UserData.cpp.obj $
    .b0/lib/src/cook/chai/module/Basic.cpp.obj $
    .b0/lib/src/cook/chai/module/Book.cpp.obj $
    .b0/lib/src/cook/chai/module/Cook.cpp.obj $
    .b0/lib/src/cook/chai/module/Flags.cpp.obj $
    .b0/lib/src/cook/chai/module/Ingredient.cpp.obj $
    .b0/lib/src/cook/chai/module/RaiiIngredient.cpp.obj $
    .b0/lib/src/cook/chai/module/Recipe.cpp.obj $
    .b0/lib/src/cook/chai/module/Toolchain.cpp.obj $
    .b0/lib/src/cook/chai/module/ToolchainElement.cpp.obj $
    .b0/lib/src/cook/chai/module/Uri.cpp.obj $
    .b0/lib/src/cook/chai/mss.cpp.obj $
    .b0/lib/src/cook/generator/CMake.cpp.obj $
    .b0/lib/src/cook/generator/HTML.cpp.obj $
    .b0/lib/src/cook/generator/Naft.cpp.obj $
    .b0/lib/src/cook/generator/Ninja.cpp.obj $
    .b0/lib/src/cook/generator/graphviz/Component.cpp.obj $
    .b0/lib/src/cook/generator/graphviz/Dependency.cpp.obj $
    .b0/lib/src/cook/log/Node.cpp.obj $
    .b0/lib/src/cook/log/Scope.cpp.obj $
    .b0/lib/src/cook/log/level.cpp.obj $
    .b0/lib/src/cook/model/Book.cpp.obj $
    .b0/lib/src/cook/model/Dirs.cpp.obj $
    .b0/lib/src/cook/model/Element.cpp.obj $
    .b0/lib/src/cook/model/Library.cpp.obj $
    .b0/lib/src/cook/model/Recipe.cpp.obj $
    .b0/lib/src/cook/model/Uri.cpp.obj $
    .b0/lib/src/cook/process/Menu.cpp.obj $
    .b0/lib/src/cook/process/RecipeFilteredGraph.cpp.obj $
    .b0/lib/src/cook/process/build/Graph.cpp.obj $
    .b0/lib/src/cook/process/chef/CompileArchiveLink.cpp.obj $
    .b0/lib/src/cook/process/chef/Interface.cpp.obj $
    .b0/lib/src/cook/process/command/CommonImpl.cpp.obj $
    .b0/lib/src/cook/process/souschef/Archiver.cpp.obj $
    .b0/lib/src/cook/process/souschef/Compiler.cpp.obj $
    .b0/lib/src/cook/process/souschef/DependencyPropagator.cpp.obj $
    .b0/lib/src/cook/process/souschef/IncludePathSetter.cpp.obj $
    .b0/lib/src/cook/process/souschef/LinkLibrarySorter.cpp.obj $
    .b0/lib/src/cook/process/souschef/Linker.cpp.obj $
    .b0/lib/src/cook/process/souschef/PathExtraction.cpp.obj $
    .b0/lib/src/cook/process/souschef/RecipeNamer.cpp.obj $
    .b0/lib/src/cook/process/souschef/Resolver.cpp.obj $
    .b0/lib/src/cook/process/souschef/ScriptRunner.cpp.obj $
    .b0/lib/src/cook/process/toolchain/Configuration.cpp.obj $
    .b0/lib/src/cook/process/toolchain/Element.cpp.obj $
    .b0/lib/src/cook/process/toolchain/Loader.cpp.obj $
    .b0/lib/src/cook/process/toolchain/Manager.cpp.obj $
    .b0/lib/src/cook/process/toolchain/serialize/GCC.cpp.obj $
    .b0/lib/src/cook/process/toolchain/serialize/MSVC.cpp.obj $
    .b0/lib/src/cook/process/toolchain/serialize/Standard.cpp.obj $
    .b0/lib/src/cook/rules/ASM.cpp.obj $
    .b0/lib/src/cook/rules/Binary.cpp.obj $
    .b0/lib/src/cook/rules/Bundle.cpp.obj $
    .b0/lib/src/cook/rules/C_family.cpp.obj $
    .b0/lib/src/cook/rules/Definition.cpp.obj $
    .b0/lib/src/cook/rules/Extensions.cpp.obj $
    .b0/lib/src/cook/rules/Interface.cpp.obj $
    .b0/lib/src/cook/rules/RuleSet.cpp.obj $
    .b0/lib/src/cook/util/File.cpp.obj $

#}

#[output](script:
#output.puts("build #{$b0_ut}: link .b0/gubg.std/src/catch_runner.cpp.obj $")
#($cook_test_fns+$gubg_test_fns).each do |fn|
#  output.puts("    #{$b0_tmp}/#{$obj.call(fn)} $")
#end
#output.puts("    | #{$b0_build_dir}/libcook.a #{$b0_build_dir}/libgubg.a")
    
#output.puts("    library_paths =  -L#{$b0_build_dir}")
#){
build build/b0/unit_tests.exe: link .b0/gubg.std/src/catch_runner.cpp.obj $
    .b0/lib/test/src/cook/LanguageTypePair_tests.cpp.obj $
    .b0/lib/test/src/cook/Menu_tests.cpp.obj $
    .b0/lib/test/src/cook/Result_tests.cpp.obj $
    .b0/lib/test/src/cook/ingredient/Collection_tests.cpp.obj $
    .b0/lib/test/src/cook/model/Uri_tests.cpp.obj $
    .b0/lib/test/src/cook/rules/C_family_tests.cpp.obj $
    .b0/lib/test/src/cook/rules/Extensions_tests.cpp.obj $
    .b0/lib/test/src/cook/rules/Resolve_tests.cpp.obj $
    .b0/extern/gubg.std/test/src/gubg/History_tests.cpp.obj $
    .b0/extern/gubg.std/test/src/gubg/OnlyOnce_tests.cpp.obj $
    .b0/extern/gubg.std/test/src/gubg/Range_tests.cpp.obj $
    .b0/extern/gubg.std/test/src/gubg/Signal_tests.cpp.obj $
    .b0/extern/gubg.std/test/src/gubg/Transition_tests.cpp.obj $
    .b0/extern/gubg.std/test/src/gubg/array/Pool_tests.cpp.obj $
    .b0/extern/gubg.std/test/src/gubg/iterator/Transform_tests.cpp.obj $
    .b0/extern/gubg.std/test/src/gubg/ix/Range_tests.cpp.obj $
    .b0/extern/gubg.std/test/src/gubg/macro/variadic_tests.cpp.obj $
    .b0/extern/gubg.std/test/src/gubg/mss_tests.cpp.obj $
    .b0/extern/gubg.std/test/src/gubg/pattern/SignalSlot_tests.cpp.obj $
    .b0/extern/gubg.std/test/src/gubg/thread/Pool_tests.cpp.obj $
    .b0/extern/gubg.std/test/src/gubg/thread/Semaphore_tests.cpp.obj $
    .b0/extern/gubg.std/test/src/gubg/time/Date_tests.cpp.obj $
    .b0/extern/gubg.std/test/src/gubg/tmp/FindBaseByName_tests.cpp.obj $
    .b0/extern/gubg.std/test/src/gubg/tmp/If_tests.cpp.obj $
    .b0/extern/gubg.std/test/src/gubg/tmp/IntType_tests.cpp.obj $
    .b0/extern/gubg.std/test/src/gubg/tmp/SFINAE_tests.cpp.obj $
    .b0/extern/gubg.std/test/src/gubg/tmp/TypeList_tests.cpp.obj $
    .b0/extern/gubg.std/test/src/gubg/tuple/ForEach_tests.cpp.obj $
    .b0/extern/gubg.std/test/src/gubg/tuple/TypeTransform_tests.cpp.obj $
    .b0/extern/gubg.io/test/src/gubg/Integer_tests.cpp.obj $
    .b0/extern/gubg.io/test/src/gubg/Strange_tests.cpp.obj $
    .b0/extern/gubg.io/test/src/gubg/bit/Reader_tests.cpp.obj $
    .b0/extern/gubg.io/test/src/gubg/bit/Writer_tests.cpp.obj $
    .b0/extern/gubg.io/test/src/gubg/bit/gr/Codec_tests.cpp.obj $
    .b0/extern/gubg.io/test/src/gubg/bit/gr/Sequence_tests.cpp.obj $
    .b0/extern/gubg.io/test/src/gubg/bit/oor/Coded_tests.cpp.obj $
    .b0/extern/gubg.io/test/src/gubg/bit/oor/util_tests.cpp.obj $
    .b0/extern/gubg.io/test/src/gubg/bit/sign/codec_tests.cpp.obj $
    .b0/extern/gubg.io/test/src/gubg/bitmagic/bitmagic_tests.cpp.obj $
    .b0/extern/gubg.io/test/src/gubg/cli/Range_tests.cpp.obj $
    .b0/extern/gubg.io/test/src/gubg/file/Creater_tests.cpp.obj $
    .b0/extern/gubg.io/test/src/gubg/file/File_tests.cpp.obj $
    .b0/extern/gubg.io/test/src/gubg/file/Filesystem_tests.cpp.obj $
    .b0/extern/gubg.io/test/src/gubg/file/Forest_tests.cpp.obj $
    .b0/extern/gubg.io/test/src/gubg/frame/Recode_tests.cpp.obj $
    .b0/extern/gubg.io/test/src/gubg/hash/MD5_tests.cpp.obj $
    .b0/extern/gubg.io/test/src/gubg/ip/Address_tests.cpp.obj $
    .b0/extern/gubg.io/test/src/gubg/ip/Endpoint_tests.cpp.obj $
    .b0/extern/gubg.io/test/src/gubg/ip/Socket_tests.cpp.obj $
    .b0/extern/gubg.io/test/src/gubg/ip/resolve_tests.cpp.obj $
    .b0/extern/gubg.io/test/src/gubg/ip/tcp/ClientServer_tests.cpp.obj $
    .b0/extern/gubg.io/test/src/gubg/markdown/Reader_tests.cpp.obj $
    .b0/extern/gubg.io/test/src/gubg/markdown/ast/Tree_tests.cpp.obj $
    .b0/extern/gubg.io/test/src/gubg/naft/Document_tests.cpp.obj $
    .b0/extern/gubg.io/test/src/gubg/naft/Reader_tests.cpp.obj $
    .b0/extern/gubg.io/test/src/gubg/parse/naft/Parser_tests.cpp.obj $
    .b0/extern/gubg.io/test/src/gubg/parse/xml/Coding_tests.cpp.obj $
    .b0/extern/gubg.io/test/src/gubg/parse/xml/Parser_tests.cpp.obj $
    .b0/extern/gubg.io/test/src/gubg/rs485/Bus_tests.cpp.obj $
    .b0/extern/gubg.io/test/src/gubg/s11n/Reader_tests.cpp.obj $
    .b0/extern/gubg.io/test/src/gubg/s11n/Writer_tests.cpp.obj $
    .b0/extern/gubg.io/test/src/gubg/sedes/Catalogue_tests.cpp.obj $
    .b0/extern/gubg.io/test/src/gubg/serial/Endpoint_tests.cpp.obj $
    .b0/extern/gubg.io/test/src/gubg/std/filesystem_tests.cpp.obj $
    .b0/extern/gubg.io/test/src/gubg/string/Buffer_tests.cpp.obj $
    .b0/extern/gubg.io/test/src/gubg/string_tests.cpp.obj $
    .b0/extern/gubg.io/test/src/gubg/svg/Turtle_tests.cpp.obj $
    .b0/extern/gubg.io/test/src/gubg/t2/Builder_tests.cpp.obj $
    .b0/extern/gubg.io/test/src/gubg/t2/Parser_tests.cpp.obj $
    .b0/extern/gubg.io/test/src/gubg/t2/Segmenter_tests.cpp.obj $
    .b0/extern/gubg.io/test/src/gubg/terminal/Color_tests.cpp.obj $
    .b0/extern/gubg.io/test/src/gubg/wrap/Xcoder_tests.cpp.obj $
    .b0/extern/gubg.io/test/src/gubg/xml/Reader_tests.cpp.obj $
    .b0/extern/gubg.io/test/src/gubg/xml/SVG_tests.cpp.obj $
    .b0/extern/gubg.io/test/src/gubg/xml/Writer_tests.cpp.obj $
    .b0/extern/gubg.algo/test/src/gubg/eq/Processor_tests.cpp.obj $
    .b0/extern/gubg.algo/test/src/gubg/gp/World_tests.cpp.obj $
    .b0/extern/gubg.algo/test/src/gubg/gp/support/Formula_tests.cpp.obj $
    .b0/extern/gubg.algo/test/src/gubg/graph/AdjacencyList_tests.cpp.obj $
    .b0/extern/gubg.algo/test/src/gubg/graph/Graph_tests.cpp.obj $
    .b0/extern/gubg.algo/test/src/gubg/graph/NPartite_tests.cpp.obj $
    .b0/extern/gubg.algo/test/src/gubg/graph/TopologicalSort_tests.cpp.obj $
    .b0/extern/gubg.algo/test/src/gubg/optimization/SCG_tests.cpp.obj $
    .b0/extern/gubg.algo/test/src/gubg/pid/Controller_tests.cpp.obj $
    .b0/extern/gubg.algo/test/src/gubg/planning/Planning_tests.cpp.obj $
    .b0/extern/gubg.algo/test/src/gubg/planning/Task_tests.cpp.obj $
    .b0/extern/gubg.algo/test/src/gubg/signal/LinearChirp_tests.cpp.obj $
    .b0/extern/gubg.algo/test/src/gubg/smooth/Quadratic_tests.cpp.obj $
    .b0/extern/gubg.algo/test/src/gubg/tree/Tree_tests.cpp.obj $
    .b0/extern/gubg.algo/test/src/gubg/tree/grow_tests.cpp.obj $
    .b0/extern/gubg.algo/test/src/gubg/xtree/Model_tests.cpp.obj $
    .b0/extern/gubg.math/test/src/gubg/Matrix_tests.cpp.obj $
    .b0/extern/gubg.math/test/src/gubg/Rosenbrock_tests.cpp.obj $
    .b0/extern/gubg.math/test/src/gubg/RunningSum_tests.cpp.obj $
    .b0/extern/gubg.math/test/src/gubg/decay/Average_tests.cpp.obj $
    .b0/extern/gubg.math/test/src/gubg/decay/Sum_tests.cpp.obj $
    .b0/extern/gubg.math/test/src/gubg/fxp/Number_tests.cpp.obj $
    .b0/extern/gubg.math/test/src/gubg/ilog_tests.cpp.obj $
    .b0/extern/gubg.math/test/src/gubg/tensor/Tensor_tests.cpp.obj $
    .b0/extern/gubg.chaiscript/test/src/gubg/chai/Regex_tests.cpp.obj $
    .b0/extern/gubg.chaiscript/test/src/gubg/chai/inject_tests.cpp.obj $
    .b0/extern/gubg.chaiscript/test/src/gubg/chai/test/Engine.cpp.obj $
    | build/b0/libcook.a build/b0/libgubg.a
    library_paths =  -Lbuild/b0
#}
    user_libs_gcc = -lcook -lgubg
    user_libs_msvc = libcook.a libgubg.a

#[output](script:
#output.puts("build #{$b0_cook}: link $")
#$cook_app_fns.each do |fn|
#  output.puts("    #{$b0_tmp}/#{$obj.call(fn)} $")
#end
#output.puts("    | #{$b0_build_dir}/libcook.a #{$b0_build_dir}/libgubg.a")
#output.puts("    library_paths =  -L#{$b0_build_dir}")
#){
build build/b0/cook.exe: link $
    .b0/app/src/cook/App.cpp.obj $
    .b0/app/src/cook/app/Options.cpp.obj $
    .b0/app/src/main.cpp.obj $
    | build/b0/libcook.a build/b0/libgubg.a
    library_paths =  -Lbuild/b0
#}
    user_libs_gcc = -lcook -lgubg
    user_libs_msvc = libcook.a libgubg.a
    library_paths_msvc =  /LIBPATH:build/b0
